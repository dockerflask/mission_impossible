apiVersion: v1
kind: Service
metadata:
  name: flask
  labels:
    app: flask
spec:
  ports:
  - port: 5000
  selector:
    app: flask
    tier: frontend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  labels:
    app: flask
spec:
  selector:
    matchLabels:
      app: flask
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask
        tier: frontend
    spec:
      initContainers:
      - name: wait-for-redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        args:
        - '-c'
        - 'until redis-cli -h $REDIS_HOST -p $REDIS_PORT ping; do echo "$(date): waiting for redis..."; sleep 3; done'
        envFrom:
        - configMapRef:
            name: flask
      containers:
      - name: flask
        image: dockerflask/mission-impossible
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: flask
        envFrom:
        - configMapRef:
            name: flask
        resources:
          limits:
            cpu: "1"
            memory: "2000Mi"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask
  labels:
    app: flask
data:
  REDIS_HOST: redis
  REDIS_PORT: "6379"